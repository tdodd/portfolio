"use strict";!function(){function e(e){c.style.height=n(),c.classList.remove("none");var t=e.dataset.triggerId,o=document.querySelector("#"+t);o.classList.add("showing","fade-in-up"),o.classList.remove("none","fade-out-down")}function t(e){var t=e.dataset.triggerId,n=document.querySelector("#"+t);n.classList.remove("showing","fade-in-up"),n.classList.add("fade-out-down"),setTimeout(function(){c.classList.add("none"),n.classList.add("none")},i)}function n(){var e=document.body,t=document.documentElement;return Math.max(e.scrollHeight,e.offsetHeight,t.clientHeight,t.scrollHeight,t.offsetHeight).toString()+"px"}for(var o=document.querySelectorAll(".timeline-btn"),r=document.querySelectorAll(".close-btn"),c=document.querySelector(".page-overlay"),i=400,s=0;s<o.length;s++)o[s].addEventListener("click",function(t){t.preventDefault(),e(t.target)});for(var a=0;a<r.length;a++)r[a].addEventListener("click",function(e){e.preventDefault(),t(e.target)})}();
"use strict";function getViewportWidth(){return Math.max(document.documentElement.clientWidth,window.innerWidth||0)}function checkListInViewport(t){for(var e=0;e<t.length;e++)if(inViewport(t[e]))return!0;return!1}function inViewport(t){for(var e=t.offsetTop,n=t.offsetLeft,f=t.offsetWidth,i=t.offsetHeight;t.offsetParent;)e+=(t=t.offsetParent).offsetTop,n+=t.offsetLeft;return e>=window.pageYOffset&&n>=window.pageXOffset&&e+i<=window.pageYOffset+window.innerHeight&&n+f<=window.pageXOffset+window.innerWidth}
"use strict";!function(){function t(){r=!0;for(var t=0;t<e.length;t++)e[t].classList.add("slide-in-left");for(var c=0;c<i.length;c++)i[c].classList.add("slide-in-right")}var e=document.querySelectorAll(".grid-left"),i=document.querySelectorAll(".grid-right"),r=!1;(checkListInViewport(e)||checkListInViewport(i))&&t(),window.addEventListener("scroll",function(c){r||!checkListInViewport(e)&&!checkListInViewport(i)||t()})}();
"use strict";!function(){function i(){t=!0,n.classList.add("profile-animation")}var n=document.querySelector(".img-round"),t=!1;inViewport(n)&&i(),window.addEventListener("scroll",function(o){!t&&inViewport(n)&&i()})}();
"use strict";!function(){function t(){e=!0;for(var t=0;t<n.length;t++)!function(t){var e=Math.floor(1e3*Math.random());setTimeout(function(){return n[t].classList.add("pop-in")},e)}(t)}var n=document.querySelectorAll(".grid-item"),e=!1;window.addEventListener("resize",function(i){!e&&checkListInViewport(n)&&t()}),window.addEventListener("scroll",function(i){!e&&checkListInViewport(n)&&t()})}();
"use strict";!function(){function t(){for(t=0;t<s.length;t++)inViewport(s[t])&&!s[t].classList.contains("showing")&&(s[t].classList.add("showing"),i(s[t]));for(var t=0;t<o.length;t++)inViewport(o[t])&&!o[t].classList.contains("showing")&&(o[t].classList.add("showing"),n(o[t]))}function i(t){t.classList.remove("hidden"),t.classList.add("animate-in-left")}function n(t){t.classList.remove("hidden"),t.classList.add("animate-in-right")}function e(){for(t=0;t<s.length;t++)s[t].classList.remove("hidden");for(var t=0;t<o.length;t++)o[t].classList.remove("hidden")}var s=document.querySelectorAll(".timeline-content-left"),o=document.querySelectorAll(".timeline-content-right");t(),getViewportWidth()<=768&&e(),window.addEventListener("resize",function(t){getViewportWidth()<=768&&e()}),window.addEventListener("scroll",function(i){t()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
