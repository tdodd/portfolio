"use strict";!function(){function e(e){var t=e.dataset.triggerId,n=document.querySelector("#"+t);n.classList.add("showing"),n.classList.remove("none")}function t(e){var t=e.dataset.triggerId,n=document.querySelector("#"+t);n.classList.remove("showing"),n.classList.add("none")}for(var n=document.querySelectorAll(".timeline-btn"),r=document.querySelectorAll(".close-btn"),c=0;c<n.length;c++)n[c].addEventListener("click",function(t){t.preventDefault(),e(t.target)});for(var o=0;o<r.length;o++)r[o].addEventListener("click",function(e){e.preventDefault(),t(e.target)})}();
"use strict";function checkListInViewport(e){for(var t=0;t<e.length;t++)if(inViewport(e[t]))return console.log(e[t]),console.log("is in the viewport!"),!0;return!1}function inViewport(e){for(var t=e.offsetTop,f=e.offsetLeft,o=e.offsetWidth,n=e.offsetHeight;e.offsetParent;)t+=(e=e.offsetParent).offsetTop,f+=e.offsetLeft;return t>=window.pageYOffset&&f>=window.pageXOffset&&t+n<=window.pageYOffset+window.innerHeight&&f+o<=window.pageXOffset+window.innerWidth}
"use strict";!function(){function t(){r=!0;for(var t=0;t<e.length;t++)e[t].classList.add("slide-in-left");for(var n=0;n<i.length;n++)i[n].classList.add("slide-in-right")}var e=document.querySelectorAll(".grid-left"),i=document.querySelectorAll(".grid-right"),r=!1;window.addEventListener("scroll",function(n){r||!checkListInViewport(e)&&!checkListInViewport(i)||t()})}();
"use strict";!function(){function n(){console.log("showin"),o=!0,i.classList.add("profile-animation")}var i=document.querySelector(".img-round"),o=!1;inViewport(i)&&n(),window.addEventListener("scroll",function(t){!o&&inViewport(i)&&n()})}();
"use strict";!function(){var t=document.querySelectorAll(".grid-item"),n=!1;window.addEventListener("scroll",function(e){if(!n&&checkListInViewport(t)){n=!0;for(var i=0;i<t.length;i++)!function(n){var e=Math.floor(1e3*Math.random());setTimeout(function(){return t[n].classList.add("pop-in")},e)}(i)}})}();
"use strict";!function(){function n(){for(n=0;n<o.length;n++)inViewport(o[n])&&!o[n].classList.contains("showing")&&(o[n].classList.add("showing"),i(o[n]));for(var n=0;n<c.length;n++)inViewport(c[n])&&!c[n].classList.contains("showing")&&(c[n].classList.add("showing"),e(c[n]))}function t(){return Math.max(document.documentElement.clientWidth,window.innerWidth||0)}function i(n){n.classList.remove("hidden"),n.classList.add("animate-in-left")}function e(n){n.classList.remove("hidden"),n.classList.add("animate-in-right")}function s(){for(n=0;n<o.length;n++)o[n].classList.remove("hidden");for(var n=0;n<c.length;n++)c[n].classList.remove("hidden")}var o=document.querySelectorAll(".timeline-content-left"),c=document.querySelectorAll(".timeline-content-right");n(),t()<=768&&s(),window.onresize=function(n){t()<=768&&s()},window.addEventListener("scroll",function(t){n()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
