"use strict";!function(){function e(e){c.style.height=n(),c.classList.remove("none");var t=e.dataset.triggerId,o=document.querySelector("#"+t);o.classList.add("showing","fade-in-up"),o.classList.remove("none","fade-out-down")}function t(e){var t=e.dataset.triggerId,n=document.querySelector("#"+t);n.classList.remove("showing","fade-in-up"),n.classList.add("fade-out-down"),setTimeout(function(){c.classList.add("none"),n.classList.add("none")},i)}function n(){var e=document.body,t=document.documentElement;return Math.max(e.scrollHeight,e.offsetHeight,t.clientHeight,t.scrollHeight,t.offsetHeight).toString()+"px"}for(var o=document.querySelectorAll(".timeline-btn"),r=document.querySelectorAll(".close-btn"),c=document.querySelector(".page-overlay"),i=350,s=0;s<o.length;s++)o[s].addEventListener("click",function(t){t.preventDefault(),e(t.target)});for(var a=0;a<r.length;a++)r[a].addEventListener("click",function(e){e.preventDefault(),t(e.target)})}();
"use strict";function checkListInViewport(e){for(var t=0;t<e.length;t++)if(inViewport(e[t]))return!0;return!1}function inViewport(e){for(var t=e.offsetTop,f=e.offsetLeft,n=e.offsetWidth,o=e.offsetHeight;e.offsetParent;)t+=(e=e.offsetParent).offsetTop,f+=e.offsetLeft;return t>=window.pageYOffset&&f>=window.pageXOffset&&t+o<=window.pageYOffset+window.innerHeight&&f+n<=window.pageXOffset+window.innerWidth}
"use strict";!function(){function t(){r=!0;for(var t=0;t<e.length;t++)e[t].classList.add("slide-in-left");for(var c=0;c<i.length;c++)i[c].classList.add("slide-in-right")}var e=document.querySelectorAll(".grid-left"),i=document.querySelectorAll(".grid-right"),r=!1;(checkListInViewport(e)||checkListInViewport(i))&&t(),window.addEventListener("scroll",function(c){r||!checkListInViewport(e)&&!checkListInViewport(i)||t()})}();
"use strict";!function(){function i(){t=!0,n.classList.add("profile-animation")}var n=document.querySelector(".img-round"),t=!1;inViewport(n)&&i(),window.addEventListener("scroll",function(o){!t&&inViewport(n)&&i()})}();
"use strict";!function(){var t=document.querySelectorAll(".grid-item"),n=!1;window.addEventListener("scroll",function(e){if(!n&&checkListInViewport(t)){n=!0;for(var i=0;i<t.length;i++)!function(n){var e=Math.floor(1e3*Math.random());setTimeout(function(){return t[n].classList.add("pop-in")},e)}(i)}})}();
"use strict";!function(){function n(){for(n=0;n<o.length;n++)inViewport(o[n])&&!o[n].classList.contains("showing")&&(o[n].classList.add("showing"),i(o[n]));for(var n=0;n<c.length;n++)inViewport(c[n])&&!c[n].classList.contains("showing")&&(c[n].classList.add("showing"),e(c[n]))}function t(){return Math.max(document.documentElement.clientWidth,window.innerWidth||0)}function i(n){n.classList.remove("hidden"),n.classList.add("animate-in-left")}function e(n){n.classList.remove("hidden"),n.classList.add("animate-in-right")}function s(){for(n=0;n<o.length;n++)o[n].classList.remove("hidden");for(var n=0;n<c.length;n++)c[n].classList.remove("hidden")}var o=document.querySelectorAll(".timeline-content-left"),c=document.querySelectorAll(".timeline-content-right");n(),t()<=768&&s(),window.onresize=function(n){t()<=768&&s()},window.addEventListener("scroll",function(t){n()})}();
//# sourceMappingURL=data:application/json;base64,
